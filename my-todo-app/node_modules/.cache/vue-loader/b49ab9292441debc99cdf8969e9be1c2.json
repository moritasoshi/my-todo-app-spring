{"remainingRequest":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/src/views/Board.vue","mtime":1600302751580},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwovLyBpbXBvcnQgeyByZXF1aXJlZCB9IGZyb20gInZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzIjsKaW1wb3J0IGphIGZyb20gInZlZS12YWxpZGF0ZS9kaXN0L2xvY2FsZS9qYS5qc29uIjsKaW1wb3J0IHsKICBleHRlbmQsCiAgbG9jYWxpemUsCiAgVmFsaWRhdGlvblByb3ZpZGVyLAogIFZhbGlkYXRpb25PYnNlcnZlciwKfSBmcm9tICJ2ZWUtdmFsaWRhdGUiOwoKLy8g44OQ44Oq44OH44O844K344On44Oz44Or44O844OrCmV4dGVuZCgicmVxdWlyZWQiLCAodmFsdWUpID0+IHsKICBpZiAodmFsdWUpIHsKICAgIHJldHVybiB0cnVlOwogIH0KICByZXR1cm4gZmFsc2U7Cn0pOwovLyBMb2NhbGl6YXRpb24KbG9jYWxpemUoImphIiwgamEpOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERyYWdnYWJsZSwKICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgIFZhbGlkYXRpb25PYnNlcnZlciwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aWxlU2hvdzogZmFsc2UsCiAgICAgIGJvYXJkU2hvdzogZmFsc2UsCiAgICAgIGNhcmRTaG93OiBmYWxzZSwKICAgICAgdGFyZ2V0Qm9hcmROYW1lOiAiIiwKICAgICAgdGFyZ2V0VGlsZTogewogICAgICAgIGlkOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgfSwKICAgICAgdGFyZ2V0Q2FyZDogewogICAgICAgIGlkOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICB0aWxlTmFtZTogIiIsCiAgICAgIH0sCgogICAgICBuZXdUaWxlOiB7CiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgY2FyZHM6IFtdLAogICAgICB9LAogICAgICBuZXdDYXJkOiB7CiAgICAgICAgbmFtZTogIm5ldyBjYXJkIiwKICAgICAgfSwKICAgICAgYm9hcmQ6IHt9LAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBzbHVnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmJvYXJkID0gdGhpcy4kc3RvcmUuZ2V0dGVycy5nZXRCb2FyZEJ5TmFtZSh0aGlzLnNsdWcKICAgICk7CiAgfSwKICB3YXRjaDogewogICAgImJvYXJkLnRpbGVzIjogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbigpIHsKICAgICAgICBjb25zb2xlLmxvZygid2F0Y2hlZCIpOwogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCJ1cGRhdGVCb2FyZCIsIHRoaXMuYm9hcmQpOwogICAgICB9LAogICAgICBkZWVwOiB0cnVlLAogICAgfSwKICB9LAogIG1ldGhvZHM6IHsKICAgIHNob3dCb2FyZCgpIHsKICAgICAgdGhpcy5ib2FyZFNob3cgPSAhdGhpcy5ib2FyZFNob3c7CiAgICB9LAogICAgc2hvd1RpbGUoeyB0aWxlSWQsIHRpbGVOYW1lIH0pIHsKICAgICAgdGhpcy50aWxlU2hvdyA9ICF0aGlzLnRpbGVTaG93OwogICAgICB0aGlzLnRhcmdldFRpbGUuaWQgPSB0aWxlSWQ7CiAgICAgIHRoaXMudGFyZ2V0VGlsZS5uYW1lID0gdGlsZU5hbWU7CiAgICB9LAogICAgc2hvd0NhcmQoeyBjYXJkSWQsIGNhcmROYW1lLCB0aWxlTmFtZSB9KSB7CiAgICAgIHRoaXMuY2FyZFNob3cgPSAhdGhpcy5jYXJkU2hvdzsKICAgICAgdGhpcy50YXJnZXRDYXJkLmlkID0gY2FyZElkOwogICAgICB0aGlzLnRhcmdldENhcmQubmFtZSA9IGNhcmROYW1lOwogICAgICB0aGlzLnRhcmdldENhcmQudGlsZU5hbWUgPSB0aWxlTmFtZTsKICAgIH0sCiAgICBlZGl0Qm9hcmQoKSB7CiAgICAgIHRoaXMuYm9hcmQuYm9hcmRfbmFtZSA9IHRoaXMudGFyZ2V0Qm9hcmROYW1lOwogICAgICB0aGlzLnVwZGF0ZUJvYXJkKHRoaXMuYm9hcmQpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogImJvYXJkIiwKICAgICAgICBwYXJhbXM6IHsgc2x1ZzogdGhpcy50YXJnZXRCb2FyZE5hbWUgfSwKICAgICAgfSk7CiAgICAgIHRoaXMudGFyZ2V0Qm9hcmROYW1lID0gIiI7CiAgICAgIHRoaXMuYm9hcmRTaG93ID0gZmFsc2U7CiAgICB9LAogICAgZWRpdFRpbGUoKSB7CiAgICAgIHRoaXMuYm9hcmQudGlsZXMuZmluZCgKICAgICAgICAodGlsZSkgPT4gdGlsZS5pZCA9PT0gdGhpcy50YXJnZXRUaWxlLmlkCiAgICAgICkubmFtZSA9IHRoaXMudGFyZ2V0VGlsZS5uYW1lOwogICAgICB0aGlzLnVwZGF0ZUJvYXJkKHRoaXMuYm9hcmQpOwogICAgICB0aGlzLnRhcmdldFRpbGUgPSB7CiAgICAgICAgaWQ6ICIiLAogICAgICAgIG5hbWU6ICIiLAogICAgICB9OwogICAgICB0aGlzLnRpbGVTaG93ID0gZmFsc2U7CiAgICB9LAogICAgZWRpdENhcmQoKSB7CiAgICAgIHRoaXMuYm9hcmQudGlsZXMKICAgICAgICAuZmluZCgodGlsZSkgPT4gdGlsZS5uYW1lID09PSB0aGlzLnRhcmdldENhcmQudGlsZU5hbWUpCiAgICAgICAgLmNhcmRzLmZpbmQoCiAgICAgICAgICAoY2FyZCkgPT4gY2FyZC5pZCA9PT0gdGhpcy50YXJnZXRDYXJkLmlkCiAgICAgICAgKS5uYW1lID0gdGhpcy50YXJnZXRDYXJkLm5hbWU7CiAgICAgIHRoaXMudXBkYXRlQm9hcmQodGhpcy5ib2FyZCk7CiAgICAgIHRoaXMudGFyZ2V0Q2FyZCA9IHsKICAgICAgICBpZDogIiIsCiAgICAgICAgbmFtZTogIiIsCiAgICAgICAgdGlsZU5hbWU6ICIiLAogICAgICB9OwogICAgICB0aGlzLmNhcmRTaG93ID0gZmFsc2U7CiAgICB9LAogICAgYWRkQ2FyZCh0aWxlTmFtZSkgewogICAgICB0aGlzLm5ld0NhcmQuaWQgPSB0aGlzLnV1aWQoKTsKICAgICAgdGhpcy5ib2FyZC50aWxlcwogICAgICAgIC5maW5kKCh0aWxlKSA9PiB0aWxlLm5hbWUgPT09IHRpbGVOYW1lKQogICAgICAgIC5jYXJkcy5wdXNoKHRoaXMubmV3Q2FyZCk7CiAgICAgIHRoaXMubmV3Q2FyZCA9IHsKICAgICAgICBuYW1lOiAibmV3IGNhcmQiLAogICAgICB9OwogICAgICB0aGlzLnVwZGF0ZUJvYXJkKHRoaXMuYm9hcmQpOwogICAgfSwKICAgIGFkZFRpbGUoKSB7CiAgICAgIHRoaXMubmV3VGlsZS5pZCA9IHRoaXMudXVpZCgpOwogICAgICB0aGlzLmJvYXJkLnRpbGVzLnB1c2godGhpcy5uZXdUaWxlKTsKICAgICAgdGhpcy51cGRhdGVCb2FyZCh0aGlzLmJvYXJkKTsKICAgICAgdGhpcy5uZXdUaWxlID0gewogICAgICAgIG5hbWU6IG51bGwsCiAgICAgICAgY2FyZHM6IFtdLAogICAgICB9OwogICAgfSwKICAgIGRlbGV0ZVRoaXNCb2FyZCgpIHsKICAgICAgYWxlcnQoCiAgICAgICAgdGhpcy5ib2FyZC5ib2FyZF9uYW1lICsKICAgICAgICAgICIgOiDnj77lnKjjga7jg5zjg7zjg4njgpLliYrpmaTjgZfjgabjgoLjgojjgo3jgZfjgYTjgafjgZnjgYvvvJ9cbuKAu+OBk+OBruODquOCueODiOWGheOBruWFqOOBpuOBruODquOCueODiOODu+OCq+ODvOODieOCguWJiumZpOOBleOCjOOBvuOBmSIKICAgICAgKTsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImRlbGV0ZUJvYXJkIiwgdGhpcy5ib2FyZCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICBuYW1lOiAiaG9tZSIsCiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZVRpbGUoeyB0aWxlSWQgfSkgewogICAgICBjb25zdCB0aWxlSW5kZXggPSB0aGlzLmJvYXJkLnRpbGVzLmZpbmRJbmRleCgKICAgICAgICAodGlsZSkgPT4gdGlsZS5pZCA9PT0gdGlsZUlkCiAgICAgICk7CiAgICAgIGFsZXJ0KAogICAgICAgIHRoaXMuYm9hcmQudGlsZXNbdGlsZUluZGV4XS5uYW1lICsKICAgICAgICAgICIgOiDjgZPjga7jg6rjgrnjg4jjgpLliYrpmaTjgZfjgabjgoLjgojjgo3jgZfjgYTjgafjgZnjgYvvvJ9cbuKAu+OBk+OBruODquOCueODiOWGheOBruWFqOOBpuOBruOCq+ODvOODieOCguWJiumZpOOBleOCjOOBvuOBmSIKICAgICAgKTsKICAgICAgdGhpcy5ib2FyZC50aWxlcy5zcGxpY2UodGlsZUluZGV4LCAxKTsKICAgIH0sCiAgICBkZWxldGVDYXJkKHsgdGlsZUlkLCBjYXJkSWQgfSkgewogICAgICBjb25zdCB0aWxlSW5kZXggPSB0aGlzLmJvYXJkLnRpbGVzLmZpbmRJbmRleCgKICAgICAgICAodGlsZSkgPT4gdGlsZS5pZCA9PT0gdGlsZUlkCiAgICAgICk7CiAgICAgIGNvbnN0IGNhcmRJbmRleCA9IHRoaXMuYm9hcmQudGlsZXNbdGlsZUluZGV4XS5jYXJkcy5maW5kSW5kZXgoCiAgICAgICAgKGNhcmQpID0+IGNhcmQuaWQgPT09IGNhcmRJZAogICAgICApOwogICAgICB0aGlzLmJvYXJkLnRpbGVzW3RpbGVJbmRleF0uY2FyZHMuc3BsaWNlKGNhcmRJbmRleCwgMSk7CiAgICB9LAogICAgdXVpZCgpIHsKICAgICAgcmV0dXJuICJ4eHh4eHh4eHh4eHh4eHh4eHgiLnJlcGxhY2UoL1t4eV0vZywgKGMpID0+IHsKICAgICAgICB2YXIgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCwKICAgICAgICAgIHYgPSBjID09ICJ4IiA/IHIgOiAociAmIDB4MykgfCAweDg7CiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpOwogICAgICB9KTsKICAgIH0sCiAgICAuLi5tYXBBY3Rpb25zKFsidXBkYXRlQm9hcmQiLCAiZGVsZXRlQm9hcmQiXSksCiAgfSwKfTsK"},{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Board.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <v-container class=\"d-flex\">\n      <h2>{{ board.name }}</h2>\n      <template>\n        <v-btn color=\"green lighten-2\" class=\"mx-5\" icon @click=\"showBoard\">\n          <v-icon>mdi-pencil</v-icon>\n        </v-btn>\n      </template>\n      <template>\n        <v-btn icon @click=\"deleteThisBoard\">\n          <v-icon>mdi-delete</v-icon>\n        </v-btn>\n      </template>\n      <v-spacer></v-spacer>\n    </v-container>\n        <!-- ボード名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"boardShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"ボード名\"\n        >\n          <v-text-field\n            label=\"ボード名を入力\"\n            color=\"grey\"\n            v-model=\"targetBoardName\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            class=\"ml-2\"\n            :disabled=\"invalid\"\n            @click=\"editBoard\"\n            >ボード名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n\n    <!-- 既存ボード -->\n    <v-container class=\"d-flex\">\n      <v-card\n        width=\"230\"\n        class=\"mx-1\"\n        v-for=\"(tile, index) in board.tiles\"\n        :key=\"index\"\n      >\n        <v-app-bar dark color=\"grey\" dense>\n          <v-toolbar-title>{{ tile.name }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <template>\n            <v-btn\n              color=\"white\"\n              class=\"ma-2\"\n              icon\n              @click=\"\n                showTile({\n                  tileId: tile.tile_id,\n                  tileName: tile.name,\n                })\n              \"\n            >\n              <v-icon>mdi-pencil</v-icon>\n            </v-btn>\n          </template>\n          <template>\n            <v-btn\n              icon\n              @click=\"\n                deleteTile({\n                  tileId: tile.tile_id,\n                })\n              \"\n            >\n              <v-icon>mdi-delete</v-icon>\n            </v-btn>\n          </template>\n        </v-app-bar>\n        <v-container>\n          <draggable group=\"all-tasks\" :list=\"tile.cards\">\n            <v-card\n              v-for=\"(card, i) in tile.cards\"\n              :key=\"i\"\n              width=\"220\"\n              hover\n              class=\"d-flex my-card\"\n            >\n              <v-card-text color=\"black\" v-text=\"card.name\"></v-card-text>\n              <v-card-actions>\n                <template>\n                  <v-btn\n                    color=\"green lighten-2\"\n                    class=\"ma-2\"\n                    icon\n                    @click=\"\n                      showCard({\n                        cardId: card.card_id,\n                        cardName: card.name,\n                        tileName: tile.name,\n                      })\n                    \"\n                  >\n                    <v-icon>mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-btn\n                  icon\n                  @click=\"\n                    deleteCard({\n                      tileId: tile.tile_id,\n                      cardId: card.card_id,\n                    })\n                  \"\n                >\n                  <v-icon>mdi-delete</v-icon>\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </draggable>\n          <v-btn @click=\"addCard(tile.name)\">Add</v-btn>\n        </v-container>\n      </v-card>\n      <!-- リスト追加 -->\n      <ValidationObserver v-slot=\"{ invalid }\">\n        <v-form>\n          <ValidationProvider\n            rules=\"required\"\n            v-slot=\"{ errors, valid }\"\n            name=\"リスト名\"\n          >\n            <v-text-field\n              v-model=\"newTile.name\"\n              label=\"+ リストを追加\"\n              outlined\n              color=\"green\"\n              class=\"shrink\"\n              :error-messages=\"errors\"\n              :success=\"valid\"\n            ></v-text-field>\n          </ValidationProvider>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            class=\"ml-2\"\n            :disabled=\"invalid\"\n            @click=\"addTile\"\n            >リストを追加</v-btn\n          >\n        </v-form>\n      </ValidationObserver>\n    </v-container>\n\n    <!-- \n    <-- トランジション関連 --\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <ValidationProvider\n        rules=\"required\"\n        v-slot=\"{ errors, valid }\"\n        name=\"リスト名\"\n      >\n      </ValidationProvider>\n    </ValidationObserver>\n-->\n\n\n    <!-- リスト名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"tileShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"リスト名\"\n        >\n          <v-text-field\n            label=\"リスト名を入力\"\n            color=\"grey\"\n            v-model=\"targetTile.name\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            :disabled=\"invalid\"\n            class=\"ml-2\"\n            @click=\"editTile\"\n            >リスト名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n\n    <!-- カード名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"cardShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"カード名\"\n        >\n          <v-text-field\n            label=\"カード名を入力\"\n            color=\"grey\"\n            v-model=\"targetCard.name\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            :disabled=\"invalid\"\n            class=\"ml-2\"\n            @click=\"editCard\"\n            >カード名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n  </v-app>\n</template>\n\n<script>\nimport Draggable from \"vuedraggable\";\nimport { mapActions } from \"vuex\";\n// import { required } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja.json\";\nimport {\n  extend,\n  localize,\n  ValidationProvider,\n  ValidationObserver,\n} from \"vee-validate\";\n\n// バリデーションルール\nextend(\"required\", (value) => {\n  if (value) {\n    return true;\n  }\n  return false;\n});\n// Localization\nlocalize(\"ja\", ja);\n\nexport default {\n  components: {\n    Draggable,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data() {\n    return {\n      tileShow: false,\n      boardShow: false,\n      cardShow: false,\n      targetBoardName: \"\",\n      targetTile: {\n        id: \"\",\n        name: \"\",\n      },\n      targetCard: {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      },\n\n      newTile: {\n        name: \"\",\n        cards: [],\n      },\n      newCard: {\n        name: \"new card\",\n      },\n      board: {},\n    };\n  },\n  props: {\n    slug: {\n      type: String,\n      required: true,\n    },\n  },\n\n  created() {\n    this.board = this.$store.getters.getBoardByName(this.slug\n    );\n  },\n  watch: {\n    \"board.tiles\": {\n      handler: function() {\n        console.log(\"watched\");\n        this.$store.dispatch(\"updateBoard\", this.board);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    showBoard() {\n      this.boardShow = !this.boardShow;\n    },\n    showTile({ tileId, tileName }) {\n      this.tileShow = !this.tileShow;\n      this.targetTile.id = tileId;\n      this.targetTile.name = tileName;\n    },\n    showCard({ cardId, cardName, tileName }) {\n      this.cardShow = !this.cardShow;\n      this.targetCard.id = cardId;\n      this.targetCard.name = cardName;\n      this.targetCard.tileName = tileName;\n    },\n    editBoard() {\n      this.board.board_name = this.targetBoardName;\n      this.updateBoard(this.board);\n      this.$router.push({\n        name: \"board\",\n        params: { slug: this.targetBoardName },\n      });\n      this.targetBoardName = \"\";\n      this.boardShow = false;\n    },\n    editTile() {\n      this.board.tiles.find(\n        (tile) => tile.id === this.targetTile.id\n      ).name = this.targetTile.name;\n      this.updateBoard(this.board);\n      this.targetTile = {\n        id: \"\",\n        name: \"\",\n      };\n      this.tileShow = false;\n    },\n    editCard() {\n      this.board.tiles\n        .find((tile) => tile.name === this.targetCard.tileName)\n        .cards.find(\n          (card) => card.id === this.targetCard.id\n        ).name = this.targetCard.name;\n      this.updateBoard(this.board);\n      this.targetCard = {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      };\n      this.cardShow = false;\n    },\n    addCard(tileName) {\n      this.newCard.id = this.uuid();\n      this.board.tiles\n        .find((tile) => tile.name === tileName)\n        .cards.push(this.newCard);\n      this.newCard = {\n        name: \"new card\",\n      };\n      this.updateBoard(this.board);\n    },\n    addTile() {\n      this.newTile.id = this.uuid();\n      this.board.tiles.push(this.newTile);\n      this.updateBoard(this.board);\n      this.newTile = {\n        name: null,\n        cards: [],\n      };\n    },\n    deleteThisBoard() {\n      alert(\n        this.board.board_name +\n          \" : 現在のボードを削除してもよろしいですか？\\n※このリスト内の全てのリスト・カードも削除されます\"\n      );\n      this.$store.dispatch(\"deleteBoard\", this.board);\n      this.$router.push({\n        name: \"home\",\n      });\n    },\n    deleteTile({ tileId }) {\n      const tileIndex = this.board.tiles.findIndex(\n        (tile) => tile.id === tileId\n      );\n      alert(\n        this.board.tiles[tileIndex].name +\n          \" : このリストを削除してもよろしいですか？\\n※このリスト内の全てのカードも削除されます\"\n      );\n      this.board.tiles.splice(tileIndex, 1);\n    },\n    deleteCard({ tileId, cardId }) {\n      const tileIndex = this.board.tiles.findIndex(\n        (tile) => tile.id === tileId\n      );\n      const cardIndex = this.board.tiles[tileIndex].cards.findIndex(\n        (card) => card.id === cardId\n      );\n      this.board.tiles[tileIndex].cards.splice(cardIndex, 1);\n    },\n    uuid() {\n      return \"xxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      });\n    },\n    ...mapActions([\"updateBoard\", \"deleteBoard\"]),\n  },\n};\n</script>\n\n<style scoped>\n.my-card {\n  margin: 10px 0;\n}\n</style>\n"]}]}