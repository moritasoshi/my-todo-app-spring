{"remainingRequest":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/src/views/Board.vue","mtime":1600005141347},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBEcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERyYWdnYWJsZSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aWxlU2hvdzogZmFsc2UsCiAgICAgIGJvYXJkU2hvdzogZmFsc2UsCiAgICAgIGNhcmRTaG93OiBmYWxzZSwKICAgICAgdGFyZ2V0Qm9hcmROYW1lOiAiIiwKICAgICAgdGFyZ2V0VGlsZTogewogICAgICAgIGlkOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgfSwKICAgICAgdGFyZ2V0Q2FyZDogewogICAgICAgIGlkOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgICB0aWxlTmFtZTogIiIsCiAgICAgIH0sCgogICAgICBuZXdUaWxlOiB7CiAgICAgICAgbmFtZTogbnVsbCwKICAgICAgICBjYXJkczogW10sCiAgICAgIH0sCiAgICAgIG5ld0NhcmQ6IHsKICAgICAgICBuYW1lOiAibmV3IGNhcmQiLAogICAgICB9LAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBzbHVnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBib2FyZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmJvYXJkcy5maW5kKAogICAgICAgIChib2FyZCkgPT4gYm9hcmQuYm9hcmRfbmFtZSA9PT0gdGhpcy5zbHVnCiAgICAgICk7CiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgICJib2FyZC50aWxlcyI6IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24oKSB7CiAgICAgICAgY29uc29sZS5sb2coIndhdGNoZWQiKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidXBkYXRlQm9hcmQiLCB0aGlzLmJvYXJkKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBzaG93Qm9hcmQoKSB7CiAgICAgIHRoaXMuYm9hcmRTaG93ID0gIXRoaXMuYm9hcmRTaG93OwogICAgfSwKICAgIHNob3dUaWxlKHsgdGlsZUlkLCB0aWxlTmFtZSB9KSB7CiAgICAgIHRoaXMudGlsZVNob3cgPSAhdGhpcy50aWxlU2hvdzsKICAgICAgdGhpcy50YXJnZXRUaWxlLmlkID0gdGlsZUlkOwogICAgICB0aGlzLnRhcmdldFRpbGUubmFtZSA9IHRpbGVOYW1lOwogICAgfSwKICAgIHNob3dDYXJkKHsgY2FyZElkLCBjYXJkTmFtZSwgdGlsZU5hbWUgfSkgewogICAgICB0aGlzLmNhcmRTaG93ID0gIXRoaXMuY2FyZFNob3c7CiAgICAgIHRoaXMudGFyZ2V0Q2FyZC5pZCA9IGNhcmRJZDsKICAgICAgdGhpcy50YXJnZXRDYXJkLm5hbWUgPSBjYXJkTmFtZTsKICAgICAgdGhpcy50YXJnZXRDYXJkLnRpbGVOYW1lID0gdGlsZU5hbWU7CiAgICB9LAogICAgZWRpdEJvYXJkKCkgewogICAgICB0aGlzLmJvYXJkLmJvYXJkX25hbWUgPSB0aGlzLnRhcmdldEJvYXJkTmFtZTsKICAgICAgdGhpcy51cGRhdGVCb2FyZCh0aGlzLmJvYXJkKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goewogICAgICAgIG5hbWU6ICJib2FyZCIsCiAgICAgICAgcGFyYW1zOiB7IHNsdWc6IHRoaXMudGFyZ2V0Qm9hcmROYW1lIH0sCiAgICAgIH0pOwogICAgICB0aGlzLnRhcmdldEJvYXJkTmFtZSA9ICIiOwogICAgICB0aGlzLmJvYXJkU2hvdyA9IGZhbHNlOwogICAgfSwKICAgIGVkaXRUaWxlKCkgewogICAgICB0aGlzLmJvYXJkLnRpbGVzLmZpbmQoCiAgICAgICAgKHRpbGUpID0+IHRpbGUuaWQgPT09IHRoaXMudGFyZ2V0VGlsZS5pZAogICAgICApLm5hbWUgPSB0aGlzLnRhcmdldFRpbGUubmFtZTsKICAgICAgdGhpcy51cGRhdGVCb2FyZCh0aGlzLmJvYXJkKTsKICAgICAgdGhpcy50YXJnZXRUaWxlID0gewogICAgICAgIGlkOiAiIiwKICAgICAgICBuYW1lOiAiIiwKICAgICAgfTsKICAgICAgdGhpcy50aWxlU2hvdyA9IGZhbHNlOwogICAgfSwKICAgIGVkaXRDYXJkKCkgewogICAgICB0aGlzLmJvYXJkLnRpbGVzCiAgICAgICAgLmZpbmQoKHRpbGUpID0+IHRpbGUubmFtZSA9PT0gdGhpcy50YXJnZXRDYXJkLnRpbGVOYW1lKQogICAgICAgIC5jYXJkcy5maW5kKAogICAgICAgICAgKGNhcmQpID0+IGNhcmQuaWQgPT09IHRoaXMudGFyZ2V0Q2FyZC5pZAogICAgICAgICkubmFtZSA9IHRoaXMudGFyZ2V0Q2FyZC5uYW1lOwogICAgICB0aGlzLnVwZGF0ZUJvYXJkKHRoaXMuYm9hcmQpOwogICAgICB0aGlzLnRhcmdldENhcmQgPSB7CiAgICAgICAgaWQ6ICIiLAogICAgICAgIG5hbWU6ICIiLAogICAgICAgIHRpbGVOYW1lOiAiIiwKICAgICAgfTsKICAgICAgdGhpcy5jYXJkU2hvdyA9IGZhbHNlOwogICAgfSwKICAgIGFkZENhcmQodGlsZU5hbWUpIHsKICAgICAgdGhpcy5uZXdDYXJkLmlkID0gdGhpcy51dWlkKCk7CiAgICAgIHRoaXMuYm9hcmQudGlsZXMKICAgICAgICAuZmluZCgodGlsZSkgPT4gdGlsZS5uYW1lID09PSB0aWxlTmFtZSkKICAgICAgICAuY2FyZHMucHVzaCh0aGlzLm5ld0NhcmQpOwogICAgICB0aGlzLm5ld0NhcmQgPSB7CiAgICAgICAgbmFtZTogIm5ldyBjYXJkIiwKICAgICAgfTsKICAgICAgdGhpcy51cGRhdGVCb2FyZCh0aGlzLmJvYXJkKTsKICAgIH0sCiAgICBhZGRUaWxlKCkgewogICAgICB0aGlzLm5ld1RpbGUuaWQgPSB0aGlzLnV1aWQoKTsKICAgICAgdGhpcy5ib2FyZC50aWxlcy5wdXNoKHRoaXMubmV3VGlsZSk7CiAgICAgIHRoaXMudXBkYXRlQm9hcmQodGhpcy5ib2FyZCk7CiAgICAgIHRoaXMubmV3VGlsZSA9IHsKICAgICAgICBuYW1lOiBudWxsLAogICAgICAgIGNhcmRzOiBbXSwKICAgICAgfTsKICAgIH0sCiAgICBkZWxldGVDYXJkKHsgdGlsZUlkLCBjYXJkSWQgfSkgewogICAgICBjb25zdCB0aWxlSW5kZXggPSB0aGlzLmJvYXJkLnRpbGVzLmZpbmRJbmRleCgKICAgICAgICAodGlsZSkgPT4gdGlsZS5pZCA9PT0gdGlsZUlkCiAgICAgICk7CiAgICAgIGNvbnN0IGNhcmRJbmRleCA9IHRoaXMuYm9hcmQudGlsZXNbdGlsZUluZGV4XS5jYXJkcy5maW5kSW5kZXgoCiAgICAgICAgKGNhcmQpID0+IGNhcmQuaWQgPT09IGNhcmRJZAogICAgICApOwogICAgICB0aGlzLmJvYXJkLnRpbGVzW3RpbGVJbmRleF0uY2FyZHMuc3BsaWNlKGNhcmRJbmRleCwgMSk7CiAgICB9LAogICAgdXVpZCgpIHsKICAgICAgcmV0dXJuICJ4eHh4eHh4eHh4eHh4eHh4eHgiLnJlcGxhY2UoL1t4eV0vZywgKGMpID0+IHsKICAgICAgICB2YXIgciA9IChNYXRoLnJhbmRvbSgpICogMTYpIHwgMCwKICAgICAgICAgIHYgPSBjID09ICJ4IiA/IHIgOiAociAmIDB4MykgfCAweDg7CiAgICAgICAgcmV0dXJuIHYudG9TdHJpbmcoMTYpOwogICAgICB9KTsKICAgIH0sCiAgICAuLi5tYXBBY3Rpb25zKFsidXBkYXRlQm9hcmQiXSksCiAgfSwKfTsK"},{"version":3,"sources":["Board.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Board.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-app>\n    <v-container class=\"d-flex\">\n      <h2>{{ board.board_name }}</h2>\n\n      <template>\n        <v-btn color=\"green lighten-2\" class=\"mx-5\" icon @click=\"showBoard()\">\n          <v-icon>mdi-pencil</v-icon>\n        </v-btn>\n      </template>\n      <v-spacer></v-spacer>\n    </v-container>\n\n    <!-- 既存ボード -->\n    <v-container class=\"d-flex\">\n      <v-card\n        width=\"230\"\n        class=\"mx-1\"\n        v-for=\"(tile, index) in board.tiles\"\n        :key=\"index\"\n      >\n        <v-app-bar dark color=\"grey\" dense>\n          <v-toolbar-title>{{ tile.name }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <template>\n            <v-btn\n              color=\"white\"\n              class=\"ma-2\"\n              icon\n              @click=\"\n                showTile({\n                  tileId: tile.id,\n                  tileName: tile.name,\n                })\n              \"\n            >\n              <v-icon>mdi-pencil</v-icon>\n            </v-btn>\n          </template>\n        </v-app-bar>\n        <v-container>\n          <draggable group=\"all-tasks\" :list=\"tile.cards\">\n            <v-card\n              v-for=\"(card, i) in tile.cards\"\n              :key=\"i\"\n              width=\"220\"\n              hover\n              class=\"d-flex my-card\"\n            >\n              <v-card-text color=\"black\" v-text=\"card.name\"></v-card-text>\n              <v-card-actions>\n                <template>\n                  <v-btn\n                    color=\"green lighten-2\"\n                    class=\"ma-2\"\n                    icon\n                    @click=\"\n                      showCard({\n                        cardId: card.id,\n                        cardName: card.name,\n                        tileName: tile.name,\n                      })\n                    \"\n                  >\n                    <v-icon>mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-btn\n                  icon\n                  @click=\"\n                    deleteCard({\n                      tileId: tile.id,\n                      cardId: card.id,\n                    })\n                  \"\n                >\n                  <v-icon>mdi-delete</v-icon>\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </draggable>\n          <v-btn @click=\"addCard(tile.name)\">Add</v-btn>\n        </v-container>\n      </v-card>\n\n      <!-- ボード追加 -->\n      <v-text-field\n        @keydown.enter=\"addTile\"\n        v-model=\"newTile.name\"\n        label=\"+ リストを追加\"\n        outlined\n        required\n        color=\"green\"\n        class=\"shrink\"\n      ></v-text-field>\n    </v-container>\n\n    <!-- トランジション関連 -->\n    <!-- ボード名変更 -->\n    <v-container v-show=\"boardShow\">\n      <v-text-field\n        label=\"ボード名を入力\"\n        color=\"grey\"\n        v-model=\"targetBoardName\"\n      ></v-text-field>\n      <v-btn color=\"green lighten-2\" dark class=\"ml-2\" @click=\"editBoard\"\n        >ボード名を変更</v-btn\n      >\n    </v-container>\n    <!-- リスト名変更 -->\n    <v-container v-show=\"tileShow\">\n      <v-text-field\n        label=\"リスト名を入力\"\n        color=\"grey\"\n        v-model=\"targetTile.name\"\n      ></v-text-field>\n      <v-btn color=\"green lighten-2\" dark class=\"ml-2\" @click=\"editTile\"\n        >リスト名を変更</v-btn\n      >\n    </v-container>\n    <!-- カード名変更 -->\n    <v-container v-show=\"cardShow\">\n      <v-text-field\n        label=\"カード名を入力\"\n        color=\"grey\"\n        v-model=\"targetCard.name\"\n      ></v-text-field>\n      <v-btn color=\"green lighten-2\" dark class=\"ml-2\" @click=\"editCard\"\n        >カード名を変更</v-btn\n      >\n    </v-container>\n  </v-app>\n</template>\n\n<script>\nimport Draggable from \"vuedraggable\";\nimport { mapActions } from \"vuex\";\n\nexport default {\n  components: {\n    Draggable,\n  },\n  data() {\n    return {\n      tileShow: false,\n      boardShow: false,\n      cardShow: false,\n      targetBoardName: \"\",\n      targetTile: {\n        id: \"\",\n        name: \"\",\n      },\n      targetCard: {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      },\n\n      newTile: {\n        name: null,\n        cards: [],\n      },\n      newCard: {\n        name: \"new card\",\n      },\n    };\n  },\n  props: {\n    slug: {\n      type: String,\n      required: true,\n    },\n  },\n\n  computed: {\n    board() {\n      return this.$store.state.boards.find(\n        (board) => board.board_name === this.slug\n      );\n    },\n  },\n  watch: {\n    \"board.tiles\": {\n      handler: function() {\n        console.log(\"watched\");\n        this.$store.dispatch(\"updateBoard\", this.board);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    showBoard() {\n      this.boardShow = !this.boardShow;\n    },\n    showTile({ tileId, tileName }) {\n      this.tileShow = !this.tileShow;\n      this.targetTile.id = tileId;\n      this.targetTile.name = tileName;\n    },\n    showCard({ cardId, cardName, tileName }) {\n      this.cardShow = !this.cardShow;\n      this.targetCard.id = cardId;\n      this.targetCard.name = cardName;\n      this.targetCard.tileName = tileName;\n    },\n    editBoard() {\n      this.board.board_name = this.targetBoardName;\n      this.updateBoard(this.board);\n      this.$router.push({\n        name: \"board\",\n        params: { slug: this.targetBoardName },\n      });\n      this.targetBoardName = \"\";\n      this.boardShow = false;\n    },\n    editTile() {\n      this.board.tiles.find(\n        (tile) => tile.id === this.targetTile.id\n      ).name = this.targetTile.name;\n      this.updateBoard(this.board);\n      this.targetTile = {\n        id: \"\",\n        name: \"\",\n      };\n      this.tileShow = false;\n    },\n    editCard() {\n      this.board.tiles\n        .find((tile) => tile.name === this.targetCard.tileName)\n        .cards.find(\n          (card) => card.id === this.targetCard.id\n        ).name = this.targetCard.name;\n      this.updateBoard(this.board);\n      this.targetCard = {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      };\n      this.cardShow = false;\n    },\n    addCard(tileName) {\n      this.newCard.id = this.uuid();\n      this.board.tiles\n        .find((tile) => tile.name === tileName)\n        .cards.push(this.newCard);\n      this.newCard = {\n        name: \"new card\",\n      };\n      this.updateBoard(this.board);\n    },\n    addTile() {\n      this.newTile.id = this.uuid();\n      this.board.tiles.push(this.newTile);\n      this.updateBoard(this.board);\n      this.newTile = {\n        name: null,\n        cards: [],\n      };\n    },\n    deleteCard({ tileId, cardId }) {\n      const tileIndex = this.board.tiles.findIndex(\n        (tile) => tile.id === tileId\n      );\n      const cardIndex = this.board.tiles[tileIndex].cards.findIndex(\n        (card) => card.id === cardId\n      );\n      this.board.tiles[tileIndex].cards.splice(cardIndex, 1);\n    },\n    uuid() {\n      return \"xxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      });\n    },\n    ...mapActions([\"updateBoard\"]),\n  },\n};\n</script>\n\n<style scoped>\n.my-card {\n  margin: 10px 0;\n}\n</style>\n"]}]}