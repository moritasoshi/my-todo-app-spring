{"remainingRequest":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/babel-loader/lib/index.js!/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/src/views/Board.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/src/views/Board.vue","mtime":1600302751580},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/spring-boot-workspace/todo-app/my-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Board.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-app>\n    <v-container class=\"d-flex\">\n      <h2>{{ board.name }}</h2>\n      <template>\n        <v-btn color=\"green lighten-2\" class=\"mx-5\" icon @click=\"showBoard\">\n          <v-icon>mdi-pencil</v-icon>\n        </v-btn>\n      </template>\n      <template>\n        <v-btn icon @click=\"deleteThisBoard\">\n          <v-icon>mdi-delete</v-icon>\n        </v-btn>\n      </template>\n      <v-spacer></v-spacer>\n    </v-container>\n        <!-- ボード名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"boardShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"ボード名\"\n        >\n          <v-text-field\n            label=\"ボード名を入力\"\n            color=\"grey\"\n            v-model=\"targetBoardName\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            class=\"ml-2\"\n            :disabled=\"invalid\"\n            @click=\"editBoard\"\n            >ボード名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n\n    <!-- 既存ボード -->\n    <v-container class=\"d-flex\">\n      <v-card\n        width=\"230\"\n        class=\"mx-1\"\n        v-for=\"(tile, index) in board.tiles\"\n        :key=\"index\"\n      >\n        <v-app-bar dark color=\"grey\" dense>\n          <v-toolbar-title>{{ tile.name }}</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <template>\n            <v-btn\n              color=\"white\"\n              class=\"ma-2\"\n              icon\n              @click=\"\n                showTile({\n                  tileId: tile.tile_id,\n                  tileName: tile.name,\n                })\n              \"\n            >\n              <v-icon>mdi-pencil</v-icon>\n            </v-btn>\n          </template>\n          <template>\n            <v-btn\n              icon\n              @click=\"\n                deleteTile({\n                  tileId: tile.tile_id,\n                })\n              \"\n            >\n              <v-icon>mdi-delete</v-icon>\n            </v-btn>\n          </template>\n        </v-app-bar>\n        <v-container>\n          <draggable group=\"all-tasks\" :list=\"tile.cards\">\n            <v-card\n              v-for=\"(card, i) in tile.cards\"\n              :key=\"i\"\n              width=\"220\"\n              hover\n              class=\"d-flex my-card\"\n            >\n              <v-card-text color=\"black\" v-text=\"card.name\"></v-card-text>\n              <v-card-actions>\n                <template>\n                  <v-btn\n                    color=\"green lighten-2\"\n                    class=\"ma-2\"\n                    icon\n                    @click=\"\n                      showCard({\n                        cardId: card.card_id,\n                        cardName: card.name,\n                        tileName: tile.name,\n                      })\n                    \"\n                  >\n                    <v-icon>mdi-pencil</v-icon>\n                  </v-btn>\n                </template>\n                <v-btn\n                  icon\n                  @click=\"\n                    deleteCard({\n                      tileId: tile.tile_id,\n                      cardId: card.card_id,\n                    })\n                  \"\n                >\n                  <v-icon>mdi-delete</v-icon>\n                </v-btn>\n              </v-card-actions>\n            </v-card>\n          </draggable>\n          <v-btn @click=\"addCard(tile.name)\">Add</v-btn>\n        </v-container>\n      </v-card>\n      <!-- リスト追加 -->\n      <ValidationObserver v-slot=\"{ invalid }\">\n        <v-form>\n          <ValidationProvider\n            rules=\"required\"\n            v-slot=\"{ errors, valid }\"\n            name=\"リスト名\"\n          >\n            <v-text-field\n              v-model=\"newTile.name\"\n              label=\"+ リストを追加\"\n              outlined\n              color=\"green\"\n              class=\"shrink\"\n              :error-messages=\"errors\"\n              :success=\"valid\"\n            ></v-text-field>\n          </ValidationProvider>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            class=\"ml-2\"\n            :disabled=\"invalid\"\n            @click=\"addTile\"\n            >リストを追加</v-btn\n          >\n        </v-form>\n      </ValidationObserver>\n    </v-container>\n\n    <!-- \n    <-- トランジション関連 --\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <ValidationProvider\n        rules=\"required\"\n        v-slot=\"{ errors, valid }\"\n        name=\"リスト名\"\n      >\n      </ValidationProvider>\n    </ValidationObserver>\n-->\n\n\n    <!-- リスト名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"tileShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"リスト名\"\n        >\n          <v-text-field\n            label=\"リスト名を入力\"\n            color=\"grey\"\n            v-model=\"targetTile.name\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            :disabled=\"invalid\"\n            class=\"ml-2\"\n            @click=\"editTile\"\n            >リスト名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n\n    <!-- カード名変更 -->\n    <ValidationObserver v-slot=\"{ invalid }\">\n      <v-form v-show=\"cardShow\">\n        <ValidationProvider\n          rules=\"required\"\n          v-slot=\"{ errors, valid }\"\n          name=\"カード名\"\n        >\n          <v-text-field\n            label=\"カード名を入力\"\n            color=\"grey\"\n            v-model=\"targetCard.name\"\n            :error-messages=\"errors\"\n            :success=\"valid\"\n          ></v-text-field>\n          <v-btn\n            color=\"green lighten-2\"\n            dark\n            :disabled=\"invalid\"\n            class=\"ml-2\"\n            @click=\"editCard\"\n            >カード名を変更</v-btn\n          >\n        </ValidationProvider>\n      </v-form>\n    </ValidationObserver>\n  </v-app>\n</template>\n\n<script>\nimport Draggable from \"vuedraggable\";\nimport { mapActions } from \"vuex\";\n// import { required } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja.json\";\nimport {\n  extend,\n  localize,\n  ValidationProvider,\n  ValidationObserver,\n} from \"vee-validate\";\n\n// バリデーションルール\nextend(\"required\", (value) => {\n  if (value) {\n    return true;\n  }\n  return false;\n});\n// Localization\nlocalize(\"ja\", ja);\n\nexport default {\n  components: {\n    Draggable,\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data() {\n    return {\n      tileShow: false,\n      boardShow: false,\n      cardShow: false,\n      targetBoardName: \"\",\n      targetTile: {\n        id: \"\",\n        name: \"\",\n      },\n      targetCard: {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      },\n\n      newTile: {\n        name: \"\",\n        cards: [],\n      },\n      newCard: {\n        name: \"new card\",\n      },\n      board: {},\n    };\n  },\n  props: {\n    slug: {\n      type: String,\n      required: true,\n    },\n  },\n\n  created() {\n    this.board = this.$store.getters.getBoardByName(this.slug\n    );\n  },\n  watch: {\n    \"board.tiles\": {\n      handler: function() {\n        console.log(\"watched\");\n        this.$store.dispatch(\"updateBoard\", this.board);\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    showBoard() {\n      this.boardShow = !this.boardShow;\n    },\n    showTile({ tileId, tileName }) {\n      this.tileShow = !this.tileShow;\n      this.targetTile.id = tileId;\n      this.targetTile.name = tileName;\n    },\n    showCard({ cardId, cardName, tileName }) {\n      this.cardShow = !this.cardShow;\n      this.targetCard.id = cardId;\n      this.targetCard.name = cardName;\n      this.targetCard.tileName = tileName;\n    },\n    editBoard() {\n      this.board.board_name = this.targetBoardName;\n      this.updateBoard(this.board);\n      this.$router.push({\n        name: \"board\",\n        params: { slug: this.targetBoardName },\n      });\n      this.targetBoardName = \"\";\n      this.boardShow = false;\n    },\n    editTile() {\n      this.board.tiles.find(\n        (tile) => tile.id === this.targetTile.id\n      ).name = this.targetTile.name;\n      this.updateBoard(this.board);\n      this.targetTile = {\n        id: \"\",\n        name: \"\",\n      };\n      this.tileShow = false;\n    },\n    editCard() {\n      this.board.tiles\n        .find((tile) => tile.name === this.targetCard.tileName)\n        .cards.find(\n          (card) => card.id === this.targetCard.id\n        ).name = this.targetCard.name;\n      this.updateBoard(this.board);\n      this.targetCard = {\n        id: \"\",\n        name: \"\",\n        tileName: \"\",\n      };\n      this.cardShow = false;\n    },\n    addCard(tileName) {\n      this.newCard.id = this.uuid();\n      this.board.tiles\n        .find((tile) => tile.name === tileName)\n        .cards.push(this.newCard);\n      this.newCard = {\n        name: \"new card\",\n      };\n      this.updateBoard(this.board);\n    },\n    addTile() {\n      this.newTile.id = this.uuid();\n      this.board.tiles.push(this.newTile);\n      this.updateBoard(this.board);\n      this.newTile = {\n        name: null,\n        cards: [],\n      };\n    },\n    deleteThisBoard() {\n      alert(\n        this.board.board_name +\n          \" : 現在のボードを削除してもよろしいですか？\\n※このリスト内の全てのリスト・カードも削除されます\"\n      );\n      this.$store.dispatch(\"deleteBoard\", this.board);\n      this.$router.push({\n        name: \"home\",\n      });\n    },\n    deleteTile({ tileId }) {\n      const tileIndex = this.board.tiles.findIndex(\n        (tile) => tile.id === tileId\n      );\n      alert(\n        this.board.tiles[tileIndex].name +\n          \" : このリストを削除してもよろしいですか？\\n※このリスト内の全てのカードも削除されます\"\n      );\n      this.board.tiles.splice(tileIndex, 1);\n    },\n    deleteCard({ tileId, cardId }) {\n      const tileIndex = this.board.tiles.findIndex(\n        (tile) => tile.id === tileId\n      );\n      const cardIndex = this.board.tiles[tileIndex].cards.findIndex(\n        (card) => card.id === cardId\n      );\n      this.board.tiles[tileIndex].cards.splice(cardIndex, 1);\n    },\n    uuid() {\n      return \"xxxxxxxxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n        var r = (Math.random() * 16) | 0,\n          v = c == \"x\" ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n      });\n    },\n    ...mapActions([\"updateBoard\", \"deleteBoard\"]),\n  },\n};\n</script>\n\n<style scoped>\n.my-card {\n  margin: 10px 0;\n}\n</style>\n"],"sourceRoot":"src/views"}]}