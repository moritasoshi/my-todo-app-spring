{"remainingRequest":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/thread-loader/dist/cjs.js!/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/babel-loader/lib/index.js!/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/src/views/Home.vue","mtime":1600061750787},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/moritasoshi/Workspace/vue-workspace/my-todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL21vcml0YXNvc2hpL1dvcmtzcGFjZS92dWUtd29ya3NwYWNlL215LXRvZG8tYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwppbXBvcnQgeyByZXF1aXJlZCB9IGZyb20gInZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzIjsKaW1wb3J0IGphIGZyb20gInZlZS12YWxpZGF0ZS9kaXN0L2xvY2FsZS9qYS5qc29uIjsKaW1wb3J0IHsgZXh0ZW5kLCBsb2NhbGl6ZSwgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICJ2ZWUtdmFsaWRhdGUiOyAvLyDjg5Djg6rjg4fjg7zjgrfjg6fjg7Pjg6vjg7zjg6sKCmV4dGVuZCgicmVxdWlyZWQiLCByZXF1aXJlZCk7IC8vIExvY2FsaXphdGlvbgoKbG9jYWxpemUoImphIiwgamEpOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBWYWxpZGF0aW9uT2JzZXJ2ZXI6IFZhbGlkYXRpb25PYnNlcnZlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG5ld0JvYXJkOiB7CiAgICAgICAgYm9hcmRfbmFtZTogbnVsbCwKICAgICAgICB0aWxlczogW10KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBib2FyZHM6IGZ1bmN0aW9uIGJvYXJkcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLmJvYXJkczsKICAgIH0KICB9LAogIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQoewogICAgY3JlYXRlTmV3Qm9hcmQ6IGZ1bmN0aW9uIGNyZWF0ZU5ld0JvYXJkKCkgewogICAgICB0aGlzLmFkZEJvYXJkKHRoaXMubmV3Qm9hcmQpOyAvLyDliJ3mnJ/ljJYKCiAgICAgIHRoaXMubmV3Qm9hcmQgPSB7CiAgICAgICAgYm9hcmRfbmFtZTogbnVsbCwKICAgICAgICB0aWxlczogW10KICAgICAgfTsKICAgIH0KICB9LCBtYXBBY3Rpb25zKFsiYWRkQm9hcmQiXSkpCn07"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,SAAA,UAAA,QAAA,MAAA;AACA,SAAA,QAAA,QAAA,yBAAA;AACA,OAAA,EAAA,MAAA,kCAAA;AACA,SACA,MADA,EAEA,QAFA,EAGA,kBAHA,EAIA,kBAJA,QAKA,cALA,C,CAOA;;AACA,MAAA,CAAA,UAAA,EAAA,QAAA,CAAA,C,CACA;;AACA,QAAA,CAAA,IAAA,EAAA,EAAA,CAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,kBAAA,EAAA,kBADA;AAEA,IAAA,kBAAA,EAAA;AAFA,GADA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA;AADA,KAAA;AAMA,GAZA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,MADA,oBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAAA;AACA,IAAA,cADA,4BACA;AACA,WAAA,QAAA,CAAA,KAAA,QAAA,EADA,CAEA;;AACA,WAAA,QAAA,GAAA;AACA,QAAA,UAAA,EAAA,IADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA;AARA,KASA,UAAA,CAAA,CAAA,UAAA,CAAA,CATA;AAlBA,CAAA","sourcesContent":["<template>\n  <v-container>\n    <h2>Your boards</h2>\n    <v-container class=\"d-flex\">\n      <v-card\n        v-for=\"(board, index) in boards\"\n        :key=\"index\"\n        :to=\"{\n          name: 'board',\n          params: { slug: board.board_name },\n        }\"\n        class=\"ma-2\"\n        width=\"200\"\n        height=\"125\"\n        hover\n        dark\n        link\n        color=\"cyan lighten-2\"\n      >\n        <v-card-title v-text=\"board.board_name\"></v-card-title>\n      </v-card>\n    </v-container>\n    <h2>Create a new board</h2>\n    <v-container>\n      <v-flex xs4 mt-5>\n        <v-card>\n          <v-card-text>\n            <ValidationObserver v-slot=\"{ invalid }\">\n              <v-form>\n                <ValidationProvider\n                  rules=\"required\"\n                  v-slot=\"{ errors, valid }\"\n                  name=\"ボードタイトル\"\n                >\n                  <v-text-field\n                    outlined\n                    v-model=\"newBoard.board_name\"\n                    label=\"ボードタイトル\"\n                    color=\"grey\"\n                    :error-messages=\"errors\"\n                    :success=\"valid\"\n                  ></v-text-field>\n                </ValidationProvider>\n                <v-btn\n                  :disabled=\"invalid\"\n                  color=\"green lighten-2\"\n                  dark\n                  class=\"ml-2\"\n                  @click=\"createNewBoard\"\n                  >新しいボードを作成</v-btn\n                >\n              </v-form>\n            </ValidationObserver>\n          </v-card-text>\n        </v-card>\n      </v-flex>\n    </v-container>\n  </v-container>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport { required } from \"vee-validate/dist/rules\";\nimport ja from \"vee-validate/dist/locale/ja.json\";\nimport {\n  extend,\n  localize,\n  ValidationProvider,\n  ValidationObserver,\n} from \"vee-validate\";\n\n// バリデーションルール\nextend(\"required\", required);\n// Localization\nlocalize(\"ja\", ja);\n\nexport default {\n  components: {\n    ValidationProvider,\n    ValidationObserver,\n  },\n  data() {\n    return {\n      newBoard: {\n        board_name: null,\n        tiles: [],\n      },\n    };\n  },\n  computed: {\n    boards() {\n      return this.$store.state.boards;\n    },\n  },\n  methods: {\n    createNewBoard() {\n      this.addBoard(this.newBoard);\n      // 初期化\n      this.newBoard = {\n        board_name: null,\n        tiles: [],\n      };\n    },\n    ...mapActions([\"addBoard\"]),\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}